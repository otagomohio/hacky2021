<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hacky Hour 2021</title><link>https://otagomohio.github.io/hacky2021/</link><description>Recent content on Hacky Hour 2021</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 24 Mar 2021 13:24:39 +1300</lastBuildDate><atom:link href="https://otagomohio.github.io/hacky2021/index.xml" rel="self" type="application/rss+xml"/><item><title>Building blocks</title><link>https://otagomohio.github.io/hacky2021/concepts/building_blocks/</link><pubDate>Fri, 26 Mar 2021 14:36:57 +1300</pubDate><guid>https://otagomohio.github.io/hacky2021/concepts/building_blocks/</guid><description>Most bioinformatic methods can be organised into a few basic concepts. I have organised these in terms of how the method influences the sequence files and how it modifies or what information is gathered from them. I use the term &amp;lsquo;sequence file&amp;rsquo; very broadly; it can encompass anything from raw reads to assembled contigs to scaffolds to whole organelle or chromosome assemblies. I have furthur divided these into two main classes: lower-level processes and higher-level processes.</description></item><item><title>Data management</title><link>https://otagomohio.github.io/hacky2021/sessions/0713_data_management/</link><pubDate>Wed, 24 Mar 2021 12:58:37 +1300</pubDate><guid>https://otagomohio.github.io/hacky2021/sessions/0713_data_management/</guid><description>Ludovic Dutoit, July 2021
Description This session covers the essential of data management for a project on NeSI. It starts with a bit of general thinking before moving into some NeSI specifics.
Good habits Always have your data in at least two places. Never edit your raw data. Use informative file names: filtered_data.txtis meaningless on its own. data_noMISSINGDATAremoved12lowqual.csv is much better. Avoid proprietary formats Have a readme file Your methods are easily transportable, and should bring anyone from raw data to results.</description></item><item><title>NeSI Links</title><link>https://otagomohio.github.io/hacky2021/nesi/nesi_links/</link><pubDate>Wed, 24 Mar 2021 12:58:37 +1300</pubDate><guid>https://otagomohio.github.io/hacky2021/nesi/nesi_links/</guid><description>The NeSI support page has good documentation for help in getting started and running many tools. This page has some of the most important links. The main page is here:
NeSI support home page
Initial set up This page provides guidelines for setting up your computer to access NeSI:
Standard Terminal Setup
Job scripts The biggest difference for doing analyses on NeSI versus your own computer is that you need to submit your analysis to a queue, so that the server can handle the demand.</description></item><item><title>Transferring Files</title><link>https://otagomohio.github.io/hacky2021/basics/transferring_files/</link><pubDate>Wed, 24 Mar 2021 12:58:37 +1300</pubDate><guid>https://otagomohio.github.io/hacky2021/basics/transferring_files/</guid><description>Following are some example commands for transferring files and folders to and from the server. The NeSI support page also has good instructions.
Remember:
You must have permissions to access the target folder on the server to which you wish to move your file
Your terminal must be on your computer to move files (that is, your pwd should be somewhere on your own computer)
Transfer files from your own computer to the server scp /path/to/file/FILENAME mahuika:/path/to/target/folder (Note the colon &amp;lsquo;:&amp;rsquo; after the server name.</description></item><item><title>Troubleshooting errors</title><link>https://otagomohio.github.io/hacky2021/bugs/troubleshooting/</link><pubDate>Wed, 24 Mar 2021 12:58:37 +1300</pubDate><guid>https://otagomohio.github.io/hacky2021/bugs/troubleshooting/</guid><description>What went wrong? How to spot your mistakes and fix them We have all been there: You have followed all the right steps, have triple-checked the commands, and somehow it doesnâ€™t work; or, you think it works but then the results don&amp;rsquo;t make sense; or, nonsensical error messages seem to scream at you. Next Wednesday we will share some of our own mistakes, errors, FUs, boners, mishaps, catastrophes, and how we fixed them (at least sometimes).</description></item><item><title>Collaboration on NeSI</title><link>https://otagomohio.github.io/hacky2021/nesi/collaboration_server/</link><pubDate>Wed, 24 Mar 2021 12:58:37 +1300</pubDate><guid>https://otagomohio.github.io/hacky2021/nesi/collaboration_server/</guid><description>The Linux operating system was designed for multiple users, which makes it ideal for a server environment, and allows you to share your scripts and files with your colleagues. Here are some links and quick tips to getting your work going and letting others access your files.
Quick tip: getting your script running Once you have written your script, in order to run it you have to make it executable. This is accomplished with one simple command:</description></item><item><title>Getting help</title><link>https://otagomohio.github.io/hacky2021/bugs/getting_help/</link><pubDate>Wed, 24 Mar 2021 12:58:37 +1300</pubDate><guid>https://otagomohio.github.io/hacky2021/bugs/getting_help/</guid><description>We would like to increase communication among the group. Of course, you are always free to bring your issues and questions to Hacky Hour, but problems occur at random, often inconvenient times. Therefore we are exploring ways for you to post issues to us, and provide a flexible way for everyone to comment. Some suggested options I have heard include: Slack, Wikis, GitHub, and even Twitter. We can discuss all of these, but for this session we start with GitHub.</description></item><item><title>Regular expressions</title><link>https://otagomohio.github.io/hacky2021/basics/regular_expressions/</link><pubDate>Wed, 24 Mar 2021 12:58:37 +1300</pubDate><guid>https://otagomohio.github.io/hacky2021/basics/regular_expressions/</guid><description>For bioinformatics, it is critical to know how to use at least the basics of regular expressions (regex). There are regex that you use all the time, but most of us will look them up more often than not. Following are some links to online tutorials and cheatsheets to guide you the next time you need to use them (it will probably be sooner than you think!
Tutorials and Cheatsheets RexEgg Tutorial</description></item><item><title>Shell scripting basics</title><link>https://otagomohio.github.io/hacky2021/basics/shell_scripting_basics/</link><pubDate>Wed, 24 Mar 2021 12:58:37 +1300</pubDate><guid>https://otagomohio.github.io/hacky2021/basics/shell_scripting_basics/</guid><description>Once you move beyond basic shell commands, and the process becomes increasingly complicated, you are going to want the commands into a shell script. There are many good tutorials online to get you started. The Software Carpentry website includes some good tips on their Unix Shell lesson (chapters 5 and 6). As well, Data Carpentry has a good introduction on their lesson: Introduction to the Command Line for Genomics. For the lesson here, we will take you through some basics to get you started.</description></item></channel></rss>